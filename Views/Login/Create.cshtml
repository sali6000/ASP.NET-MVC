@model DTO.LoginEntity
@{
    ViewBag.Title = "Connection";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
<div class="form-horizontal">
    <h1 class="textBig">@ViewBag.Title</h1>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", placeholder = "Username" } })
            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Password" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            <br>
            @{ if (ViewBag.error != null)
                {
                    <span class="alert alert-danger">L'email ou le mot de pass est invalide</span>
                }
            }
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Connection" class="btn btn-default" /><br><br>
            <p>Vous n'avez pas encore de compte ? @Html.ActionLink("Inscrivez vous !", "Create", "Member")</p>
        </div>
    </div>
</div>
}
